So, this is how Typhon works:

There are two types of bypass:

- bypassing by different payloads (e.g. "os.system('calc')" and "subprocess.Popen('calc')")
- bypassing by same payloads with different techniques (e.g. os.system('c'+'a'+'l'+'c') and os.system('clac'[::-1]))

We try out every payload in RCE_data.json, and try each technique to bypass.

The workflow is as follows:

1. Take a look at what we've got in the exec scope.

2. We start by trying to import modules with the import_payloads in RCE_data.json.

3. We try to retrieve builtins with the get_builtins in RCE_data.json.

4. We try to bypass the blacklist by using the blacklist_bypass in RCE_data.json.

.1. If we can import modules, we try out every RCE* payload in RCE_data.json by importing the modules they need

.2. If we can't import modules, we try out RCE* payload in RCE_data.json by using the modules we've already imported in exec scope

. If we still can't bypass the blacklist, we start to look into the exec scope to find something (like exceptions or variables),
   that we can use to bypass the blacklist.

Note: every payload needs to be tested through every technique in Bypasser.py to find the one that works.

Enjoy!